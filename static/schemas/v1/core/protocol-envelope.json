{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "/schemas/v1/core/protocol-envelope.json",
  "title": "Protocol Envelope",
  "description": "Standard envelope structure for AdCP task responses. This envelope is added by the protocol layer (MCP, A2A, REST) and wraps the task-specific response payload. Task response schemas should NOT include these fields - they are protocol-level concerns.",
  "type": "object",
  "properties": {
    "context_id": {
      "type": "string",
      "description": "Session/conversation identifier for tracking related operations across multiple task invocations. Managed by the protocol layer to maintain conversational context."
    },
    "task_id": {
      "type": "string",
      "description": "Unique identifier for tracking asynchronous operations. Present when a task requires extended processing time. Used to query task status and retrieve results when complete."
    },
    "status": {
      "$ref": "/schemas/v1/enums/task-status.json",
      "description": "Current task execution state. Indicates whether the task is completed, in progress (working), submitted for async processing, failed, or requires user input. Managed by the protocol layer."
    },
    "message": {
      "type": "string",
      "description": "Human-readable summary of the task result. Provides natural language explanation of what happened, suitable for display to end users or for AI agent comprehension. Generated by the protocol layer based on the task response."
    },
    "webhook_url": {
      "type": "string",
      "format": "uri",
      "description": "Optional callback URL for receiving async task updates. When provided in the request, the protocol layer will POST updates to this URL as the task progresses."
    },
    "webhook_secret": {
      "type": "string",
      "description": "Optional secret for webhook signature validation. Used to verify that webhook notifications are authentic and coming from the AdCP server."
    },
    "payload": {
      "type": "object",
      "description": "The actual task-specific response data. This is the content defined in individual task response schemas (e.g., get-products-response.json, create-media-buy-response.json). Contains only domain-specific data without protocol-level fields.",
      "additionalProperties": true
    }
  },
  "required": [
    "status",
    "payload"
  ],
  "additionalProperties": false,
  "examples": [
    {
      "description": "Synchronous task response with immediate results",
      "data": {
        "context_id": "ctx_abc123",
        "status": "completed",
        "message": "Found 3 products matching your criteria for CTV inventory in California",
        "payload": {
          "products": [
            {
              "product_id": "ctv_premium_ca",
              "name": "CTV Premium - California",
              "description": "Premium connected TV inventory across California",
              "pricing": {
                "model": "cpm",
                "amount": 45.00,
                "currency": "USD"
              }
            }
          ]
        }
      }
    },
    {
      "description": "Asynchronous task response with pending operation",
      "data": {
        "context_id": "ctx_def456",
        "task_id": "task_789",
        "status": "submitted",
        "message": "Media buy creation submitted. Processing will take approximately 5-10 minutes. You'll receive updates via webhook.",
        "webhook_url": "https://buyer.example.com/webhooks/adcp",
        "payload": {
          "buyer_ref": "campaign_2024_q1"
        }
      }
    },
    {
      "description": "Task response requiring user input",
      "data": {
        "context_id": "ctx_ghi789",
        "task_id": "task_101",
        "status": "input-required",
        "message": "This media buy requires manual approval. Please review the terms and confirm to proceed.",
        "payload": {
          "media_buy_id": "mb_123456",
          "buyer_ref": "campaign_2024_q1",
          "packages": [
            {
              "package_id": "pkg_001",
              "buyer_ref": "pkg_premium_ctv"
            }
          ],
          "errors": [
            {
              "code": "APPROVAL_REQUIRED",
              "message": "Budget exceeds auto-approval threshold",
              "severity": "warning"
            }
          ]
        }
      }
    },
    {
      "description": "Failed task response with error details",
      "data": {
        "context_id": "ctx_jkl012",
        "status": "failed",
        "message": "Unable to create media buy due to invalid targeting parameters",
        "payload": {
          "errors": [
            {
              "code": "INVALID_TARGETING",
              "message": "Geographic targeting codes are invalid",
              "field": "targeting.geo_codes",
              "severity": "error"
            }
          ]
        }
      }
    }
  ],
  "notes": [
    "Task response schemas (e.g., get-products-response.json) define ONLY the payload structure",
    "Protocol implementations (MCP, A2A, REST) wrap the payload with this envelope",
    "Different protocols may use different serialization formats but maintain the same semantic structure",
    "MCP may represent this via tool response content fields and metadata",
    "A2A may represent this via assistant messages with structured data",
    "REST may use HTTP headers for status/context and JSON body for payload",
    "The envelope ensures consistent behavior across all protocol implementations"
  ]
}
